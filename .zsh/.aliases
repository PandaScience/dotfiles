alias edit_aliases='vim ~/.zsh/.aliases'

# global aliases
alias -g pnl="| tr ': ' '\n'"

# convenience (re)definitions
alias vim=nvim
alias v=nvim
alias e=nvim
alias magit='nvim -c MagitOnly'
alias ssh='TERM=xterm-256color ssh'
alias sshx='ssh -X'
alias rgi='rg --no-ignore --hidden --follow --smart-case'
alias fdi='fd --no-ignore --hidden --follow'
alias mountc='mount | column -t'
alias rsync-archive='rsync -avzh --info=progress2 --numeric-ids'
alias tf='terraform'
alias ks='switcher'
alias kns='switcher ns'
alias pel='echo -e "\n\n\n\n\n\n\n\n\n\n"'
alias yless="jless --yaml"
alias icat="kitten icat"
alias mr="mise r"
alias btd="bluetoothctl disconnect"
alias btc="bluetoothctl connect"
tree() { br -i -c :pt "$@" }

# see https://superuser.com/questions/1050894/using-dd-to-clone-a-hdd-to-an-ssd and refs therein
alias dd-disk-clone="dd status=progress bs=64K conv=noerror,sync iflag=fullblock"

# let watch expand aliases (see https://unix.stackexchange.com/a/25329)
alias watch='watch -n1 '

# follow copied and moved files to destination directory
# https://unix.stackexchange.com/questions/49802/follow-a-moved-file-to-its-destination-directory
goto() { [ -d "$1"  ] && cd "$1" || cd "$(dirname "$1")";  }
cpf() { cp "$@" && goto "$_";  }
mvf() { mv "$@" && goto "$_";  }

# swap names of two files and stop when there is a problem with tmpfile
swap(){
	local TMPFILE=tmp.$$
	mv "$1" $TMPFILE && mv "$2" "$1" && mv $TMPFILE $2
}

# list files - but fancy
alias l1='ls -1'
alias ls='eza --group-directories-first'
alias l='eza --group-directories-first -l --git'
alias la='l -a'
alias ll='eza --group-directories-first -hHlgF --color-scale --git -@ -mu'
alias lla='ll -a'

# openssl convenience commands
alias openssl_print_cert_from_clipboard="wl-paste | awk '{\$1=\$1};1' | openssl x509 -text -noout"
openssl_verify_cert_matches_key() {
  local crt=$1
  local key=$2
  local md5cert=$(openssl x509 -noout -modulus -in $crt | openssl md5)
  local md5key=$(openssl rsa -noout -modulus -in $key | openssl md5)
  echo "Hashes:"
  echo "--------------------------------------------------"
  echo "cert: ${md5cert}"
  echo "key:  ${md5key}"
  echo "--------------------------------------------------"
  [[ $md5cert == $md5key ]] && echo "-> match" || echo "-> no match"
}
# https://serverfault.com/a/661982
openssl_check_cert_from_url() {
  # extract domain name w/o protocol from url
  local domain=$(echo $1 | sed -e 's~http[s]*://~~g' -e 's~/.*~~')
  echo | openssl s_client -showcerts -servername $domain -connect ${domain}:443 2>/dev/null | openssl x509 -inform pem -noout -text
}

# greenclip convenience functions
greenclip-config() { killall greenclip ; $EDITOR ~/.config/greenclip.toml && nohup greenclip daemon > /dev/null 2>&1 & }
greenclip-reload() { killall greenclip ; nohup greenclip daemon > /dev/null 2>&1 & }
# use greenclip clear
# greenclip clear history
# greenclip-clear() { killall greenclip ; rm ~/.cache/greenclip.history && nohup greenclip daemon > /dev/null 2>&1 & }

# tfenv wrapper for dynamic p10k prompt entry: https://github.com/romkatv/powerlevel10k/issues/1622
tfenv() {
  command tfenv "$@"

  if [[ "$1" == "use" ]]; then
    TFENV_VERSION=$(tfenv version-name)
  fi
}

# load git aliases
F="${ZDOTDIR}/.aliases_git"; [ -f $F ] && source $F

# load local aliases
F="${ZDOTDIR}/.aliases_local"; [ -f $F ] && source $F
